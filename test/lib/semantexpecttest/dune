(executable
 (name semantexpecttest)
 (libraries semant parser))

(rule
 (with-stderr-to
  anattributenamedself.test.out
  (run ./semantexpecttest.exe %{dep:anattributenamedself.test})))

(rule
 (alias runtest)
 (action
  (diff anattributenamedself.test.exp anattributenamedself.test.out)))

(rule
 (with-stdout-to
  assignment.test.out
  (run ./semantexpecttest.exe %{dep:assignment.test})))

(rule
 (alias runtest)
 (action
  (diff assignment.test.exp assignment.test.out)))

(rule
 (with-stderr-to
  assignnoconform.test.out
  (run ./semantexpecttest.exe %{dep:assignnoconform.test})))

(rule
 (alias runtest)
 (action
  (diff assignnoconform.test.exp assignnoconform.test.out)))

(rule
 (with-stderr-to
  attrbadinit.test.out
  (run ./semantexpecttest.exe %{dep:attrbadinit.test})))

(rule
 (alias runtest)
 (action
  (diff attrbadinit.test.exp attrbadinit.test.out)))

(rule
 (with-stderr-to
  attributeredefined.test.out
  (run ./semantexpecttest.exe %{dep:attributeredefined.test})))

(rule
 (alias runtest)
 (action
  (diff attributeredefined.test.exp attributeredefined.test.out)))

(rule
 (with-stderr-to
  attroverride.test.out
  (run ./semantexpecttest.exe %{dep:attroverride.test})))

(rule
 (alias runtest)
 (action
  (diff attroverride.test.exp attroverride.test.out)))

(rule
 (with-stderr-to
  badargs1.test.out
  (run ./semantexpecttest.exe %{dep:badargs1.test})))

(rule
 (alias runtest)
 (action
  (diff badargs1.test.exp badargs1.test.out)))

(rule
 (with-stderr-to
  badarith.test.out
  (run ./semantexpecttest.exe %{dep:badarith.test})))

(rule
 (alias runtest)
 (action
  (diff badarith.test.exp badarith.test.out)))

(rule
 (with-stderr-to
  badattrinit.test.out
  (run ./semantexpecttest.exe %{dep:badattrinit.test})))

(rule
 (alias runtest)
 (action
  (diff badattrinit.test.exp badattrinit.test.out)))

(rule
 (with-stderr-to
  badcondpred.test.out
  (run ./semantexpecttest.exe %{dep:badcondpred.test})))

(rule
 (alias runtest)
 (action
  (diff badcondpred.test.exp badcondpred.test.out)))

(rule
 (with-stderr-to
  baddispatch.test.out
  (run ./semantexpecttest.exe %{dep:baddispatch.test})))

(rule
 (alias runtest)
 (action
  (diff baddispatch.test.exp baddispatch.test.out)))

(rule
 (with-stderr-to
  badequalitytest.test.out
  (run ./semantexpecttest.exe %{dep:badequalitytest.test})))

(rule
 (alias runtest)
 (action
  (diff badequalitytest.test.exp badequalitytest.test.out)))

(rule
 (with-stderr-to
  badequalitytest2.test.out
  (run ./semantexpecttest.exe %{dep:badequalitytest2.test})))

(rule
 (alias runtest)
 (action
  (diff badequalitytest2.test.exp badequalitytest2.test.out)))

(rule
 (with-stderr-to
  badmethodcallsitself.test.out
  (run ./semantexpecttest.exe %{dep:badmethodcallsitself.test})))

(rule
 (alias runtest)
 (action
  (diff badmethodcallsitself.test.exp badmethodcallsitself.test.out)))

(rule
 (with-stderr-to
  badnegatetype.test.out
  (run ./semantexpecttest.exe %{dep:badnegatetype.test})))

(rule
 (alias runtest)
 (action
  (diff badnegatetype.test.exp badnegatetype.test.out)))

(rule
 (with-stderr-to
  badnottype.test.out
  (run ./semantexpecttest.exe %{dep:badnottype.test})))

(rule
 (alias runtest)
 (action
  (diff badnottype.test.exp badnottype.test.out)))

(rule
 (with-stderr-to
  badoverridereturntype.test.out
  (run ./semantexpecttest.exe %{dep:badoverridereturntype.test})))

(rule
 (alias runtest)
 (action
  (diff badoverridereturntype.test.exp badoverridereturntype.test.out)))

(rule
 (with-stderr-to
  badredefineint.test.out
  (run ./semantexpecttest.exe %{dep:badredefineint.test})))

(rule
 (alias runtest)
 (action
  (diff badredefineint.test.exp badredefineint.test.out)))

(rule
 (with-stderr-to
  badstaticdispatch.test.out
  (run ./semantexpecttest.exe %{dep:badstaticdispatch.test})))

(rule
 (alias runtest)
 (action
  (diff badstaticdispatch.test.exp badstaticdispatch.test.out)))

(rule
 (with-stderr-to
  badwhilebody.test.out
  (run ./semantexpecttest.exe %{dep:badwhilebody.test})))

(rule
 (alias runtest)
 (action
  (diff badwhilebody.test.exp badwhilebody.test.out)))

(rule
 (with-stderr-to
  badwhilecond.test.out
  (run ./semantexpecttest.exe %{dep:badwhilecond.test})))

(rule
 (alias runtest)
 (action
  (diff badwhilecond.test.exp badwhilecond.test.out)))

(rule
 (with-stdout-to
  basic.test.out
  (run ./semantexpecttest.exe %{dep:basic.test})))

(rule
 (alias runtest)
 (action
  (diff basic.test.exp basic.test.out)))

(rule
 (with-stdout-to
  basicclassestree.test.out
  (run ./semantexpecttest.exe %{dep:basicclassestree.test})))

(rule
 (alias runtest)
 (action
  (diff basicclassestree.test.exp basicclassestree.test.out)))

(rule
 (with-stderr-to
  branchselfvar.test.out
  (run ./semantexpecttest.exe %{dep:branchselfvar.test})))

(rule
 (alias runtest)
 (action
  (diff branchselfvar.test.exp branchselfvar.test.out)))

(rule
 (with-stderr-to
  branchselftype.test.out
  (run ./semantexpecttest.exe %{dep:branchselftype.test})))

(rule
 (alias runtest)
 (action
  (diff branchselftype.test.exp branchselftype.test.out)))

(rule
 (with-stderr-to
  caseidenticalbranch.test.out
  (run ./semantexpecttest.exe %{dep:caseidenticalbranch.test})))

(rule
 (alias runtest)
 (action
  (diff caseidenticalbranch.test.exp caseidenticalbranch.test.out)))

(rule
 (with-stdout-to
  cells.cl.test.out
  (run ./semantexpecttest.exe %{dep:cells.cl.test})))

(rule
 (alias runtest)
 (action
  (diff cells.cl.test.exp cells.cl.test.out)))

(rule
 (with-stdout-to
  classes.test.out
  (run ./semantexpecttest.exe %{dep:classes.test})))

(rule
 (alias runtest)
 (action
  (diff classes.test.exp classes.test.out)))

(rule
 (with-stdout-to
  compare.test.out
  (run ./semantexpecttest.exe %{dep:compare.test})))

(rule
 (alias runtest)
 (action
  (diff compare.test.exp compare.test.out)))

(rule
 (with-stdout-to
  comparisons.test.out
  (run ./semantexpecttest.exe %{dep:comparisons.test})))

(rule
 (alias runtest)
 (action
  (diff comparisons.test.exp comparisons.test.out)))

(rule
 (with-stderr-to
  cycleinclasses.test.out
  (run ./semantexpecttest.exe %{dep:cycleinclasses.test})))

(rule
 (alias runtest)
 (action
  (diff cycleinclasses.test.exp cycleinclasses.test.out)))

(rule
 (with-stdout-to
  cycleinmethods.test.out
  (run ./semantexpecttest.exe %{dep:cycleinmethods.test})))

(rule
 (alias runtest)
 (action
  (diff cycleinmethods.test.exp cycleinmethods.test.out)))

(rule
 (with-stdout-to
  dispatch.test.out
  (run ./semantexpecttest.exe %{dep:dispatch.test})))

(rule
 (alias runtest)
 (action
  (diff dispatch.test.exp dispatch.test.out)))

(rule
 (with-stderr-to
  dispatchwrongargs.test.out
  (run ./semantexpecttest.exe %{dep:dispatchwrongargs.test})))

(rule
 (alias runtest)
 (action
  (diff dispatchwrongargs.test.exp dispatchwrongargs.test.out)))

(rule
 (with-stderr-to
  dupformals.test.out
  (run ./semantexpecttest.exe %{dep:dupformals.test})))

(rule
 (alias runtest)
 (action
  (diff dupformals.test.exp dupformals.test.out)))

(rule
 (with-stdout-to
  expressionblock.test.out
  (run ./semantexpecttest.exe %{dep:expressionblock.test})))

(rule
 (alias runtest)
 (action
  (diff expressionblock.test.exp expressionblock.test.out)))

(rule
 (with-stdout-to
  forwardinherits.test.out
  (run ./semantexpecttest.exe %{dep:forwardinherits.test})))

(rule
 (alias runtest)
 (action
  (diff forwardinherits.test.exp forwardinherits.test.out)))

(rule
 (with-stdout-to
  hairyscary.cl.test.out
  (run ./semantexpecttest.exe %{dep:hairyscary.cl.test})))

(rule
 (alias runtest)
 (action
  (diff hairyscary.cl.test.exp hairyscary.cl.test.out)))

(rule
 (with-stdout-to
  if.test.out
  (run ./semantexpecttest.exe %{dep:if.test})))

(rule
 (alias runtest)
 (action
  (diff if.test.exp if.test.out)))

(rule
 (with-stderr-to
  inheritsbool.test.out
  (run ./semantexpecttest.exe %{dep:inheritsbool.test})))

(rule
 (alias runtest)
 (action
  (diff inheritsbool.test.exp inheritsbool.test.out)))

(rule
 (with-stdout-to
  inheritsObject.test.out
  (run ./semantexpecttest.exe %{dep:inheritsObject.test})))

(rule
 (alias runtest)
 (action
  (diff inheritsObject.test.exp inheritsObject.test.out)))

(rule
 (with-stderr-to
  inheritsselftype.test.out
  (run ./semantexpecttest.exe %{dep:inheritsselftype.test})))

(rule
 (alias runtest)
 (action
  (diff inheritsselftype.test.exp inheritsselftype.test.out)))

(rule
 (with-stderr-to
  inheritsstring.test.out
  (run ./semantexpecttest.exe %{dep:inheritsstring.test})))

(rule
 (alias runtest)
 (action
  (diff inheritsstring.test.exp inheritsstring.test.out)))

(rule
 (with-stdout-to
  initwithself.test.out
  (run ./semantexpecttest.exe %{dep:initwithself.test})))

(rule
 (alias runtest)
 (action
  (diff initwithself.test.exp initwithself.test.out)))

(rule
 (with-stdout-to
  io.test.out
  (run ./semantexpecttest.exe %{dep:io.test})))

(rule
 (alias runtest)
 (action
  (diff io.test.exp io.test.out)))

(rule
 (with-stdout-to
  isvoid.test.out
  (run ./semantexpecttest.exe %{dep:isvoid.test})))

(rule
 (alias runtest)
 (action
  (diff isvoid.test.exp isvoid.test.out)))

(rule
 (with-stdout-to
  iteratedlet.test.out
  (run ./semantexpecttest.exe %{dep:iteratedlet.test})))

(rule
 (alias runtest)
 (action
  (diff iteratedlet.test.exp iteratedlet.test.out)))

(rule
 (with-stderr-to
  letbadinit.test.out
  (run ./semantexpecttest.exe %{dep:letbadinit.test})))

(rule
 (alias runtest)
 (action
  (diff letbadinit.test.exp letbadinit.test.out)))

(rule
 (with-stdout-to
  letinit.test.out
  (run ./semantexpecttest.exe %{dep:letinit.test})))

(rule
 (alias runtest)
 (action
  (diff letinit.test.exp letinit.test.out)))

(rule
 (with-stdout-to
  letnoinit.test.out
  (run ./semantexpecttest.exe %{dep:letnoinit.test})))

(rule
 (alias runtest)
 (action
  (diff letnoinit.test.exp letnoinit.test.out)))

(rule
 (with-stderr-to
  letself.test.out
  (run ./semantexpecttest.exe %{dep:letself.test})))

(rule
 (alias runtest)
 (action
  (diff letself.test.exp letself.test.out)))

(rule
 (with-stdout-to
  letselftype.test.out
  (run ./semantexpecttest.exe %{dep:letselftype.test})))

(rule
 (alias runtest)
 (action
  (diff letselftype.test.exp letselftype.test.out)))

(rule
 (with-stdout-to
  letshadows.test.out
  (run ./semantexpecttest.exe %{dep:letshadows.test})))

(rule
 (alias runtest)
 (action
  (diff letshadows.test.exp letshadows.test.out)))

(rule
 (with-stderr-to
  lubtest.test.out
  (run ./semantexpecttest.exe %{dep:lubtest.test})))

(rule
 (alias runtest)
 (action
  (diff lubtest.test.exp lubtest.test.out)))

(rule
 (with-stderr-to
  mainwithargs.test.out
  (run ./semantexpecttest.exe %{dep:mainwithargs.test})))

(rule
 (alias runtest)
 (action
  (diff mainwithargs.test.exp mainwithargs.test.out)))

(rule
 (with-stdout-to
  methodcallsitself.test.out
  (run ./semantexpecttest.exe %{dep:methodcallsitself.test})))

(rule
 (alias runtest)
 (action
  (diff methodcallsitself.test.exp methodcallsitself.test.out)))

(rule
 (with-stdout-to
  list.cl.test.out
  (run ./semantexpecttest.exe %{dep:list.cl.test})))

(rule
 (alias runtest)
 (action
  (diff list.cl.test.exp list.cl.test.out)))

(rule
 (with-stdout-to
  methodnameclash.test.out
  (run ./semantexpecttest.exe %{dep:methodnameclash.test})))

(rule
 (alias runtest)
 (action
  (diff methodnameclash.test.exp methodnameclash.test.out)))

(rule
 (with-stderr-to
  methodredefined.test.out
  (run ./semantexpecttest.exe %{dep:methodredefined.test})))

(rule
 (alias runtest)
 (action
  (diff methodredefined.test.exp methodredefined.test.out)))

(rule
 (with-stderr-to
  missingclass.test.out
  (run ./semantexpecttest.exe %{dep:missingclass.test})))

(rule
 (alias runtest)
 (action
  (diff missingclass.test.exp missingclass.test.out)))

(rule
 (with-stderr-to
  missingmainmethod.test.out
  (run ./semantexpecttest.exe %{dep:missingmainmethod.test})))

(rule
 (alias runtest)
 (action
  (diff missingmainmethod.test.exp missingmainmethod.test.out)))

(rule
 (with-stdout-to
  neg.test.out
  (run ./semantexpecttest.exe %{dep:neg.test})))

(rule
 (alias runtest)
 (action
  (diff neg.test.exp neg.test.out)))

(rule
 (with-stdout-to
  newselftype.test.out
  (run ./semantexpecttest.exe %{dep:newselftype.test})))

(rule
 (alias runtest)
 (action
  (diff newselftype.test.exp newselftype.test.out)))

(rule
 (with-stderr-to
  nomain.test.out
  (run ./semantexpecttest.exe %{dep:nomain.test})))

(rule
 (alias runtest)
 (action
  (diff nomain.test.exp nomain.test.out)))

(rule
 (with-stdout-to
  objectdispatchabort.test.out
  (run ./semantexpecttest.exe %{dep:objectdispatchabort.test})))

(rule
 (alias runtest)
 (action
  (diff objectdispatchabort.test.exp objectdispatchabort.test.out)))

(rule
 (with-stderr-to
  outofscope.test.out
  (run ./semantexpecttest.exe %{dep:outofscope.test})))

(rule
 (alias runtest)
 (action
  (diff outofscope.test.exp outofscope.test.out)))

(rule
 (with-stdout-to
  overriderenamearg.test.out
  (run ./semantexpecttest.exe %{dep:overriderenamearg.test})))

(rule
 (alias runtest)
 (action
  (diff overriderenamearg.test.exp overriderenamearg.test.out)))

(rule
 (with-stdout-to
  overridingmethod.test.out
  (run ./semantexpecttest.exe %{dep:overridingmethod.test})))

(rule
 (alias runtest)
 (action
  (diff overridingmethod.test.exp overridingmethod.test.out)))

(rule
 (with-stdout-to
  overridingmethod2.test.out
  (run ./semantexpecttest.exe %{dep:overridingmethod2.test})))

(rule
 (alias runtest)
 (action
  (diff overridingmethod2.test.exp overridingmethod2.test.out)))

(rule
 (with-stdout-to
  overridingmethod3.test.out
  (run ./semantexpecttest.exe %{dep:overridingmethod3.test})))

(rule
 (alias runtest)
 (action
  (diff overridingmethod3.test.exp overridingmethod3.test.out)))

(rule
 (with-stderr-to
  overridingmethod4.test.out
  (run ./semantexpecttest.exe %{dep:overridingmethod4.test})))

(rule
 (alias runtest)
 (action
  (diff overridingmethod4.test.exp overridingmethod4.test.out)))

(rule
 (with-stderr-to
  redefinedclass.test.out
  (run ./semantexpecttest.exe %{dep:redefinedclass.test})))

(rule
 (alias runtest)
 (action
  (diff redefinedclass.test.exp redefinedclass.test.out)))

(rule
 (with-stderr-to
  redefinedobject.test.out
  (run ./semantexpecttest.exe %{dep:redefinedobject.test})))

(rule
 (alias runtest)
 (action
  (diff redefinedobject.test.exp redefinedobject.test.out)))

(rule
 (with-stderr-to
  returntypenoexist.test.out
  (run ./semantexpecttest.exe %{dep:returntypenoexist.test})))

(rule
 (alias runtest)
 (action
  (diff returntypenoexist.test.exp returntypenoexist.test.out)))

(rule
 (with-stdout-to
  scopes.test.out
  (run ./semantexpecttest.exe %{dep:scopes.test})))

(rule
 (alias runtest)
 (action
  (diff scopes.test.exp scopes.test.out)))

(rule
 (with-stderr-to
  self-assignment.test.out
  (run ./semantexpecttest.exe %{dep:self-assignment.test})))

(rule
 (alias runtest)
 (action
  (diff self-assignment.test.exp self-assignment.test.out)))

(rule
 (with-stderr-to
  selfinformalparameter.test.out
  (run ./semantexpecttest.exe %{dep:selfinformalparameter.test})))

(rule
 (alias runtest)
 (action
  (diff selfinformalparameter.test.exp selfinformalparameter.test.out)))

(rule
 (with-stderr-to
  selftypebadreturn.test.out
  (run ./semantexpecttest.exe %{dep:selftypebadreturn.test})))

(rule
 (alias runtest)
 (action
  (diff selftypebadreturn.test.exp selftypebadreturn.test.out)))

(rule
 (with-stderr-to
  selftypeparameterposition.test.out
  (run ./semantexpecttest.exe %{dep:selftypeparameterposition.test})))

(rule
 (alias runtest)
 (action
  (diff
   selftypeparameterposition.test.exp
   selftypeparameterposition.test.out)))

(rule
 (with-stderr-to
  selftyperedeclared.test.out
  (run ./semantexpecttest.exe %{dep:selftyperedeclared.test})))

(rule
 (alias runtest)
 (action
  (diff selftyperedeclared.test.exp selftyperedeclared.test.out)))

(rule
 (with-stderr-to
  signaturechange.test.out
  (run ./semantexpecttest.exe %{dep:signaturechange.test})))

(rule
 (alias runtest)
 (action
  (diff signaturechange.test.exp signaturechange.test.out)))

(rule
 (with-stdout-to
  simplearith.test.out
  (run ./semantexpecttest.exe %{dep:simplearith.test})))

(rule
 (alias runtest)
 (action
  (diff simplearith.test.exp simplearith.test.out)))

(rule
 (with-stdout-to
  simplecase.test.out
  (run ./semantexpecttest.exe %{dep:simplecase.test})))

(rule
 (alias runtest)
 (action
  (diff simplecase.test.exp simplecase.test.out)))

(rule
 (with-stdout-to
  staticdispatch.test.out
  (run ./semantexpecttest.exe %{dep:staticdispatch.test})))

(rule
 (alias runtest)
 (action
  (diff staticdispatch.test.exp staticdispatch.test.out)))

(rule
 (with-stdout-to
  stringtest.test.out
  (run ./semantexpecttest.exe %{dep:stringtest.test})))

(rule
 (alias runtest)
 (action
  (diff stringtest.test.exp stringtest.test.out)))

(rule
 (with-stdout-to
  subtypemethodreturn.test.out
  (run ./semantexpecttest.exe %{dep:subtypemethodreturn.test})))

(rule
 (alias runtest)
 (action
  (diff subtypemethodreturn.test.exp subtypemethodreturn.test.out)))

(rule
 (with-stdout-to
  trickyatdispatch.test.out
  (run ./semantexpecttest.exe %{dep:trickyatdispatch.test})))

(rule
 (alias runtest)
 (action
  (diff trickyatdispatch.test.exp trickyatdispatch.test.out)))

(rule
 (with-stderr-to
  trickyatdispatch2.test.out
  (run ./semantexpecttest.exe %{dep:trickyatdispatch2.test})))

(rule
 (alias runtest)
 (action
  (diff trickyatdispatch2.test.exp trickyatdispatch2.test.out)))

(rule
 (with-stderr-to
  undeclaredassignvar.test.out
  (run ./semantexpecttest.exe %{dep:undeclaredassignvar.test})))

(rule
 (alias runtest)
 (action
  (diff undeclaredassignvar.test.exp undeclaredassignvar.test.out)))

(rule
 (with-stderr-to
  undefinedattributeclass.test.out
  (run ./semantexpecttest.exe %{dep:undefinedattributeclass.test})))

(rule
 (alias runtest)
 (action
  (diff undefinedattributeclass.test.exp undefinedattributeclass.test.out)))

(rule
 (with-stderr-to
  undefinedclassbranch.test.out
  (run ./semantexpecttest.exe %{dep:undefinedclassbranch.test})))

(rule
 (alias runtest)
 (action
  (diff undefinedclassbranch.test.exp undefinedclassbranch.test.out)))

(rule
 (with-stderr-to
  undefinedclassstaticdispatch.test.out
  (run ./semantexpecttest.exe %{dep:undefinedclassstaticdispatch.test})))

(rule
 (alias runtest)
 (action
  (diff
   undefinedclassstaticdispatch.test.exp
   undefinedclassstaticdispatch.test.out)))

(rule
 (with-stderr-to
  undefinedformalclass.test.out
  (run ./semantexpecttest.exe %{dep:undefinedformalclass.test})))

(rule
 (alias runtest)
 (action
  (diff undefinedformalclass.test.exp undefinedformalclass.test.out)))

(rule
 (with-stderr-to
  undefinedlettype.test.out
  (run ./semantexpecttest.exe %{dep:undefinedlettype.test})))

(rule
 (alias runtest)
 (action
  (diff undefinedlettype.test.exp undefinedlettype.test.out)))

(rule
 (with-stderr-to
  undefinednewclass.test.out
  (run ./semantexpecttest.exe %{dep:undefinednewclass.test})))

(rule
 (alias runtest)
 (action
  (diff undefinednewclass.test.exp undefinednewclass.test.out)))
